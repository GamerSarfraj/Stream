name: Update JioTV Playlist Cookies

on:
  schedule:
    - cron: '0 */6 * * *' # Runs every 6 hours
  workflow_dispatch: # Allows manual trigger

jobs:
  update-cookies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Update cookies in Jiotv.json
        run: |
          python -c '
          import json
          import requests
          from urllib.parse import urlparse, parse_qs

          # Configuration
          API_URL = "https://jo-json.vodep39240327.workers.dev"
          PLAYLIST_FILE = "Jiotv.json"

          def extract_hdnea_from_url(url):
              """Extract __hdnea__ cookie from MPD URL."""
              try:
                  parsed = urlparse(url)
                  query = parse_qs(parsed.query)
                  cookie = query.get("__hdnea__", [None])[0]
                  if cookie:
                      return f"__hdnea__={cookie}"
                  return None
              except:
                  return None

          def fetch_single_cookie():
              """Fetch a single __hdnea__ cookie from the API."""
              try:
                  response = requests.get(API_URL)
                  response.raise_for_status()
                  data = response.json()
                  print(f"Fetched API data for {len(data)} channels")
                  # Pick the first valid cookie from the API response
                  for channel_id, info in data.items():
                      if isinstance(info, dict) and "url" in info:
                          cookie = extract_hdnea_from_url(info["url"])
                          if cookie:
                              print(f"Using cookie from channel ID {channel_id}: {cookie}")
                              return cookie
                  print("No valid cookies found in API response")
                  return None
              except requests.RequestException as e:
                  print(f"Error fetching data from {API_URL}: {e}")
                  return None
              except ValueError as e:
                  print(f"Error parsing JSON from {API_URL}: {e}")
                  return None

          def update_playlist_cookies():
              # Read the existing playlist
              try:
                  with open(PLAYLIST_FILE, "r") as file:
                      playlist = json.load(file)
              except Exception as e:
                  print(f"Error reading {PLAYLIST_FILE}: {e}")
                  return

              # Fetch a single cookie from API
              new_cookie = fetch_single_cookie()
              if not new_cookie:
                  print("No valid cookie retrieved from API, exiting.")
                  return

              # Update the same cookie for all channels
              updated = False
              for channel in playlist:
                  channel_name = channel.get("name")
                  if not channel_name:
                      continue
                  old_cookie = channel.get("cookie")
                  if new_cookie != old_cookie:
                      channel["cookie"] = new_cookie
                      updated = True
                      print(f"Updated cookie for {channel_name} to {new_cookie}")

              # Save updated playlist if changes were made
              if updated:
                  try:
                      with open(PLAYLIST_FILE, "w") as file:
                          json.dump(playlist, file, indent=2)
                      print(f"Successfully updated {PLAYLIST_FILE}")
                  except Exception as e:
                      print(f"Error writing to {PLAYLIST_FILE}: {e}")
              else:
                  print("No cookie updates required")

          if __name__ == "__main__":
              update_playlist_cookies()
          '

      - name: Commit changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add Jiotv.json
          if git diff --quiet || ! git diff --staged --quiet; then
            git commit -m "Update single __hdnea__ cookie for all channels in Jiotv.json from API"
            git push
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
